@page "/create"
@attribute [Authorize]
@using Microsoft.AspNetCore.Components.Authorization
@using flashcard.model
@using flashcard.utils
@using Microsoft.AspNetCore.Authorization
@inject FlashCardService FlashCardService
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode InteractiveServer

<PageTitle>Create a Flashcard</PageTitle>
<div class="flex flex-col py-10 max-w-xl mx-auto gap-3">
	<div class="form-control w-full">
		<div class="label">
			<span class="label-text">Deck name</span>
		</div>
		<input type="text" placeholder="Type deck name" class="input input-bordered w-full rounded-lg"
					 @onchange="HandleDeckName" />
	</div>
	<div class="form-control w-full">
		<div class="label">
			<span class="label-text">Deck category</span>
		</div>
		<select class="select select-bordered rounded-lg max-[480px]:w-full" @onchange="HandleSelectCategory">
			<option disabled selected>Select Category</option>
			@foreach (var category in Category.GetCategoriesExceptAll())
			{
				<option value="@category.Value">@category.DisplayName</option>
			}
		</select>
	</div>
	<div class="pt-2 w-full">
		<button class="btn rounded-lg w-full" onclick="aaaaaa.showModal()">Add Card</button>
		<div class="overflow-x-auto">
			<table class="table table-auto">
				<thead>
					<tr>
						<th></th>
						<th>Del</th>
						<th>Question</th>
						<th>Answer</th>
					</tr>
				</thead>
				<tbody>
					@for (int i = 0; i < FlashCardService.FlashCardProblems.Count; i++)
					{
						var problem = FlashCardService.FlashCardProblems[i];
						var currentIndex = i;
						<tr class="hover">
							<th>@(i + 1)</th>
							<td>
								<div class="cursor-pointer bg-transparent"
										 @onclick="() => DeleteFlashCardProblem(currentIndex)">
									<flashcard.Components.Icon.IconDelete />
								</div>
							</td>
							<td class="truncate">@problem.Question</td>
							<td class="truncate">@problem.Answer</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
</div>
<dialog id="aaaaaa" class="modal modal-bottom sm:modal-middle">
	<div class="modal-box">
		<form>
			<h3 class="text-lg font-bold">New Card</h3>
			<div class="flex flex-col gap-5 py-3">
				<textarea class="textarea textarea-bordered" placeholder="Question" @onchange="HandleQuestionChange"
									required></textarea>
				<textarea class="textarea textarea-bordered" placeholder="Answer" @onchange="HandleAnswerChange"
									required></textarea>
			</div>
			<div class="flex flex-row justify-between">
				<div onclick="aaaaaa.close()">
					<button type="button" class="btn btn-sm btn-error text-white rounded-md"
									@onclick="HandleDiscard">
						Discard
					</button>
				</div>
				<button type="submit" class="btn btn-sm btn-success rounded-md" @onclick="HandleSave">Save</button>
			</div>
		</form>
	</div>
</dialog>

debug deckName: @deckName
<br>
debug selectedCategory: @selectedCategory
<br>
debug tempQuestion: @tempQuestion
<br>
debug tempAnswer: @tempAnswer
<br>
debug flashCardProblemsLength: @FlashCardService.FlashCardProblems.Count
<ul>
	@for (int i = 0; i < FlashCardService.FlashCardProblems.Count; i++)
	{
		var problem = FlashCardService.FlashCardProblems[i];
		<li>
			<strong>Index:</strong> @i <br />
			<strong>Question:</strong> @problem.Question <br />
			<strong>Answer:</strong> @problem.Answer
		</li>
	}
</ul>
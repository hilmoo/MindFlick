@page "/d/{id}"
@layout flashcard.Components.Layout.DetailLayout
@using flashcard.z_dummydata
@using flashcard.model
@rendermode InteractiveServer

<div class="h-screen w-screen">
    <div class="border-b border-gray-600">
        <div class="flex h-16 items-center flex-nowrap px-2 sm:px-10">
            <div class="absolute left-10">
                <a href="/">
                    <img class="h-8 w-auto" src="https://tailwindui.com/plus/img/logos/mark.svg?color=indigo&shade=500"
                        alt="Your Company">
                </a>
            </div>
            <div class="flex-grow flex-row items-center text-center">
                <div>
                    <span class="text-lg font-semibold">Nama Soal</span>
                </div>
                <div>
                    <span class="text-lg font-semibold">@((isStart ? currentIndex + 1 : currentIndex)) / @soalll.Count</span>
                </div>
            </div>
        </div>
    </div>
    <div class="mx-auto max-w-7xl h-[calc(100vh-4.5rem)]">
        @if (!isStart)
        {
            <div class="flex flex-col gap-5 h-full p-[2rem] mx-auto max-w-5xl">
                <div class="flex flex-col gap-3 p-10 justify-center bg-secondary w-full h-full items-center">
                    <p class="text-3xl text-center">
                        Ini judul
                        @Id
                    </p>
                    <p class="text-lg line-clamp-6 text-center">
                        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Culpa amet dolore commodi, autem incidunt
                        a
                        dolores animi ea? Ut vitae nulla repellat, molestias debitis nemo iusto magnam eum perspiciatis
                        rerum.
                        Consequatur sit illo provident esse tempora, ipsa ipsam alias nulla debitis accusamus. Omnis
                        veritatis
                        quidem quam, ipsam, perferendis ab totam labore vitae veniam
                    </p>
                    <button class="btn btn-active" @onclick=ToggleStart>Start</button>
                </div>
                <div class="flex-none items-center h-14 ">
                </div>
            </div>
        }
        @if (isStart)
        {
            <div class="flex flex-col gap-5 h-full p-[2rem] mx-auto max-w-5xl">
                <div class="flipcard cursor-pointer w-full h-full ">
                    <div class="flipcard-front bg-secondary">
                        problem
                        <article class="prose lg:prose-xl">
                            @soalll[currentIndex].Question
                        </article>
                    </div>
                    <div class="flipcard-back bg-secondary">
                        Answer
                        <article class="prose lg:prose-xl">
                            @soalll[currentIndex].Answer
                        </article>
                    </div>
                </div>

                <div class="flex-none items-center h-14 ">
                    <div class="flex justify-center gap-10  items-center h-full">
                        <div class="probNavigate">
                            <button class="btn btn-circle btn-outline" @onclick="handlePrev">
                                <flashcard.Components.Icon.IconArrowLeft />
                            </button>
                        </div>
                        <div class="probNavigate">
                            <button class="btn btn-circle btn-outline" @onclick="handleNext">
                                <flashcard.Components.Icon.IconArrowRight />
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <script>
                document.querySelectorAll('.flipcard').forEach(card => {
                    card.addEventListener('click', function (e) {
                        e.preventDefault();
                        this.classList.toggle('flipped');
                    });
                });
                document.querySelectorAll('.probNavigate').forEach(button => {
                    button.addEventListener('click', function (e) {
                        e.preventDefault();
                        document.querySelectorAll('.flipcard').forEach(card => {
                            card.classList.remove('flipped');
                            card.style.transitionDuration = '0.1s';
                        });
                        setTimeout(() => {
                            document.querySelectorAll('.flipcard').forEach(card => {
                                card.style.transitionDuration = '1s';
                            });
                        }, 100);
                    });
                });
            </script>
        }
    </div>
</div>

@code {
    private List<FlashCardProblem> soalll = new List<FlashCardProblem>();
    private int currentIndex = 0;
    private void handleNext()
    {
        if (currentIndex < soalll.Count - 1)
        {
            currentIndex++;
        }
    }
    private void handlePrev()
    {
        if (currentIndex > 0)
        {
            currentIndex--;
        }
    }
    protected override void OnInitialized()
    {
        soalll = DummyDataCardBasic.GetFlashCardProblems();
    }
}

@code {
    [Parameter]
    public string? Id { get; set; }

    private bool isStart { get; set; } = false;

    private void ToggleStart()
    {
        isStart = !isStart;
    }
}

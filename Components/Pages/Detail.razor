@page "/decks/{Slug}"
@layout flashcard.Components.Layout.DetailLayout
@inject flashcard.utils.FlashCardService FlashCardService
@rendermode InteractiveServer

<PageTitle>@deckData?.Title</PageTitle>
<div class="h-screen w-screen">
	<div class="border-b border-gray-600">
		<div class="flex h-16 items-center flex-nowrap px-2 sm:px-10">
			<div class="absolute left-10">
				<a href="/">
					<img class="h-8 w-auto" src="https://tailwindui.com/plus/img/logos/mark.svg?color=indigo&shade=500"
							 alt="Your Company">
				</a>
			</div>
			<div class="flex-grow flex-row items-center text-center">
				<div>
					<span class="text-lg font-semibold">@deckData?.Title (@deckData?.Category)</span>
				</div>
				<div>
					<span class="text-lg font-semibold">@((IsStart ? currentIndex + 1 : currentIndex)) / @soal.Count</span>
				</div>
			</div>
		</div>
	</div>
	<div class="mx-auto max-w-7xl h-[calc(100vh-4.5rem)]">
		@if (!IsStart)
		{
			<div class="flex flex-col gap-5 h-full p-[2rem] mx-auto max-w-5xl">
				<div class="flex flex-col gap-3 p-10 justify-center bg-secondary w-full h-full items-center">
					<p class="text-3xl text-center">
						@deckData?.Title
					</p>
					<p class="text-lg line-clamp-6 text-center">
						@deckData?.Description
					</p>
					<button class="btn btn-active" @onclick=ToggleStart>Start</button>
					<a href="/edit/@Slug" class="btn btn-active">Edit</a>
				</div>
				<div class="flex-none items-center h-14 ">
				</div>
			</div>
		}
		@if (IsStart)
		{
			<div class="flex flex-col gap-5 h-full p-[2rem] mx-auto max-w-5xl">
				<div class="flipcard cursor-pointer w-full h-full ">
					<div class="flipcard-front bg-secondary">
						<article class="prose lg:prose-xl">
							@soal[currentIndex].Question
						</article>
					</div>
					<div class="flipcard-back bg-secondary">
						<article class="prose lg:prose-xl">
							@soal[currentIndex].Answer
						</article>
					</div>
				</div>

				<div class="flex-none items-center h-14 ">
					<div class="flex justify-center gap-10  items-center h-full">
						<div class="probNavigate">
							<button class="btn btn-circle btn-outline" @onclick="HandlePrev" disabled="@(!CanNavigatePrev)">
								<flashcard.Components.Icon.IconArrowLeft />
							</button>
						</div>
						<div class="probNavigate">
							<button class="btn btn-circle btn-outline" @onclick="HandleNext" disabled="@(!CanNavigateNext)">
								<flashcard.Components.Icon.IconArrowRight />
							</button>
						</div>
					</div>
				</div>
			</div>
			<script>
				document.querySelectorAll('.flipcard').forEach(card => {
					card.addEventListener('click', function (e) {
						e.preventDefault();
						this.classList.toggle('flipped');
					});
				});
				document.querySelectorAll('.probNavigate').forEach(button => {
					button.addEventListener('click', function (e) {
						e.preventDefault();
						document.querySelectorAll('.flipcard').forEach(card => {
							card.classList.remove('flipped');
							card.style.transitionDuration = '0.1s';
						});
						setTimeout(() => {
							document.querySelectorAll('.flipcard').forEach(card => {
								card.style.transitionDuration = '1s';
							});
						}, 100);
					});
				});
			</script>
		}
	</div>
</div>